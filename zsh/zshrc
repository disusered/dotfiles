source "${HOME}/.dotfiles/vendor/zgen/zgen.zsh"

# Set path
path=(
  /usr/local/bin
  /usr/local/sbin
  $HOME/Development/SDK/android-sdk/tools
  $HOME/Development/SDK/android-sdk/platform-tools
  $HOME/.dotfiles/bin
  $path
)

# Set function paths
fpath=(
  /usr/local/share/zsh/site-functions
  $fpath
)

# Check if there's no init script
if ! zgen saved; then
  echo "Creating a zgen save"

  # plugins
  zgen load zsh-users/zsh-syntax-highlighting
  zgen load zsh-users/zsh-history-substring-search
  zgen load mollifier/cd-gitroot
  zgen load junegunn/fzf shell

  # completions
  zgen load zsh-users/zsh-completions src

  # theme
  zgen load mafredri/zsh-async # required for pure
  zgen load sindresorhus/pure

  # save all to init script
  zgen save
fi

# Autoload modules
# autoload -U compinit && compinit

# History
SAVEHIST=10000
HISTSIZE=10000
HISTFILE=$HOME/.zsh_history

setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_SAVE_NO_DUPS
setopt HIST_VERIFY
setopt HIST_BEEP

# Disable Globbing
alias git='noglob git'
alias open='noglob open'

# Aliases
alias sudo='sudo '
alias f='fzf-tmux'
alias c='clear'
alias r='ranger'
alias d='dict'
alias j="selectmark"
alias p='preview'
alias pp='ppreview'
alias flushdns='sudo discoveryutil udnsflushcaches'
alias chat='weechat'
alias twitter='rainbowstream -iot'
alias preview='imgcat'
alias t='twitter'
alias cdg='cd-gitroot'
alias top='htop'
alias pbc='pbcopy'
alias pbp='pbpaste'
alias ztime='/usr/bin/time zsh -i -c exit'
alias used='ncdu'
alias ag='ag --pager "less -R" --color-line-number 1\;35 --color-path 1\;37 --color-match 7\;34'
alias http='http --style vim'
alias help='vim $(ls ~/.dotfiles/help/ | f --prompt "‚ùì  " | xargs -I % echo ~/.dotfiles/help/%)'
alias fonts='fc-list | cut -f2 -d: | sort -u'
alias g='git'
alias grl="gitrefloginteractive"
alias gl="gitloginteractive"
alias gfl='git-flow'
alias gs='g status --short --branch'
alias gb='g branch'
alias gbc='g checkout -b'
alias gc='g commit --verbose'
alias gca='g commit --verbose --amend'
alias gcm='g commit --message'
alias gg='g ack'
alias ga='g add'
alias gp='g push'
alias gpf='g push --force'
alias gd='g diff --no-ext-diff'
alias gdt='g difftool'
alias gm='g merge'
alias gmt='g mergetool'
alias gf='g fetch'
alias gfm='g pull'
alias gr='g reset'
alias gco='g checkout'
alias ls='ls -G'
alias ll='ls -l'
alias la='ls -la'
alias repl-babel='nesh -b'
alias repl-coffee='nesh -c'
alias repl-cljs='planck'

# Temporary files
if [[ ! -d "$TMPDIR" ]]; then
  mkdir -p -m 700 "$TMPDIR"
fi
TMPPREFIX="${TMPDIR%/}/zsh"
if [[ ! -d "$TMPPREFIX" ]]; then
  mkdir -p "$TMPPREFIX"
fi

# NVM
function nvm {
  if [ type nvm >/dev/null 2>&1 ]
  then
    nvm
  else
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
  fi
}

# Git Interactive
function gitrefloginteractive {
  local out q k index
  while out=$(git reflog --format=reflog --color "$@" |
    f --prompt="üè•  " --ansi --no-sort --query="$q" \
      --print-query --expect=ctrl-d,ctrl-r);
  do
    q=$(head -1 <<< "$out")
    k=$(head -2 <<< "$out" | tail -1)
    index=$(echo $out | awk '{print $2}' | sed 's/:$//' | sed -E 's/HEAD@{(.+)}/\1/' | tr -d '[[:space:]]')
    [ -z "$index" ] && continue
    if [ "$k" = 'ctrl-d' ]; then
      git difftool HEAD@{$index}
    elif [ "$k" = 'ctrl-r' ]; then
      git reset HEAD@{$index}
      break;
    else
      clear
      git show --color=always HEAD@{$index} | LESS="-X -g -i -M -R -S -w -z-4" less
    fi
  done
}

function gitloginteractive {
  local out shas q k style complex basic

  basic="%C(magenta bold)%h%C(reset) %C(auto)%d%C(reset) %s"
  complex="%C(magenta bold)%h%C(reset) %C(blue bold)%aN%C(reset) %C(auto)%d%C(reset) %s %C(8)(%cr)%C(reset)"
  style=$basic

  while out=$(
      git l | fzf --ansi --no-sort --reverse --query="$q" --prompt "üìñ " \
          --print-query --expect=ctrl-d,ctrl-i,ctrl-r --toggle-sort=\`); do
    q=$(head -1 <<< "$out")
    k=$(head -2 <<< "$out" | tail -1)
    shas=$(sed '1,2d;s/^[^a-z0-9]*//;/^$/d' <<< "$out" | awk '{print $1}')
    [ -z "$shas" ] && continue
    if [ "$k" = ctrl-d ]; then
      git difftool $shas
    elif [ "$k" = ctrl-i ]; then
      if [ ${#style} -eq ${#basic} ]
      then
        style=$complex
      else
        style=$basic
      fi
    elif [ "$k" = 'ctrl-r' ]; then
      git reset $shas
      break;
    else
      clear
      git show --color=always $shas | LESS="-X -g -i -M -R -S -w -z-4" less
    fi
  done
}

# Marks
function jump {
  cd -P "$MARKPATH/$1" 2>/dev/null || echo "No such mark: $1"
}
function mark {
  mkdir -p "$MARKPATH"; ln -s "$(pwd)" "$MARKPATH/$1"
}
function unmark {
  rm -i "$MARKPATH/$1"
}
function marks {
  \ls -l "$MARKPATH" | tail -n +2 | sed 's/  / /g' | cut -d' ' -f9- | awk -F ' -> ' '{printf "%-10s -> %s\n", $1, $2}'
}
function _completemarks {
  reply=($(ls $MARKPATH))
}
function selectmark {
  URI="$(marks | cat | f | awk '{print $1}')"
  cd -P "$MARKPATH/$URI" 2>/dev/null || echo "No such mark: $URI"
}
compctl -K _completemarks jump
compctl -K _completemarks unmark

# urxvt modal cursor
function zle-keymap-select zle-line-init {
  # change cursor shape in iTerm2
  case $KEYMAP in
    vicmd)      print -n -- "\E]50;CursorShape=0\C-G";;  # block cursor
    viins|main) print -n -- "\E]50;CursorShape=1\C-G";;  # line cursor
  esac

  zle reset-prompt
  zle -R
}

function zle-line-finish {
  print -n -- "\E]50;CursorShape=0\C-G"  # block cursor
}

# Setup zsh-autosuggestions
AUTOSUGGEST="${HOME}/.zgen/tarruda/zsh-autosuggestions-master/autosuggestions.zsh"
if [ -f $AUTOSUGGEST ]; then
  source $AUTOSUGGEST

  zle-line-init() {
    zle autosuggest-start
  }
fi

# Base16 Shell
BASE16_SCHEME="tomorrow"
BASE16_SHELL="${HOME}/.dotfiles/vendor/base16-shell/base16-$BASE16_SCHEME.dark.sh"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

man() {
  env LESS_TERMCAP_mb=$'\E[01;31m' \
  LESS_TERMCAP_md=$'\E[01;35;74m' \
  LESS_TERMCAP_me=$'\E[0m' \
  LESS_TERMCAP_se=$'\E[0m' \
  LESS_TERMCAP_so=$'\E[38;246m' \
  LESS_TERMCAP_ue=$'\E[0m' \
  LESS_TERMCAP_us=$'\E[04;38;146m' \
  man "$@"
}

bindkey -v

# History substring search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# HOME/END bindings
if [ -z "$WINDOWID" ]
then
  if [ -z "$TMUX" ]
  then
    # iTerm2
    bindkey "^[[H" beginning-of-line
    bindkey "^[[F" end-of-line
    bindkey -M vicmd '^[[H' beginning-of-line
    bindkey -M vicmd '^[[F' end-of-line
  else
    # iTerm2 + tmux
    bindkey "^[[1~" beginning-of-line
    bindkey "^[[4~" end-of-line
    bindkey -M vicmd '^[[1~' beginning-of-line
    bindkey -M vicmd '^[[4~' end-of-line
  fi
else
  # urxvt
  bindkey '^[[7~' beginning-of-line
  bindkey '^[[8~' end-of-line
  bindkey -M vicmd '^[[7~' beginning-of-line
  bindkey -M vicmd '^[[8~' end-of-line
fi

# Delete key
bindkey '^[[3~' delete-char

# Vi bindings
# mine
bindkey -M vicmd 'H' beginning-of-line
bindkey -M vicmd 'L' end-of-line

# Delete
bindkey -M vicmd '^[[3~' delete-char

# Undo/Redo
bindkey -M vicmd 'u' undo
bindkey -M vicmd '^R' redo

# backspace and ^h working even after
# returning from command mode
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char

# Autosuggest
bindkey '^T' autosuggest-toggle
bindkey '^n' vi-forward-word

zle -N zle-line-init
zle -N zle-line-finish
zle -N zle-keymap-select

# Help
unalias run-help
autoload run-help
HELPDIR=/usr/local/share/zsh/help

# FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
