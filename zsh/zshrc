source "${HOME}/.dotfiles/vendor/zgen/zgen.zsh"

# Set path
path=(
  /usr/local/bin
  /usr/local/sbin
  $HOME/.dotfiles/bin
  $HOME/Development/SDK/android-sdk/tools
  $HOME/Development/SDK/android-sdk/platform-tools
  $path
)

# Set function paths
fpath=(
  /usr/local/share/zsh/site-functions
  $fpath
)

# Check if there's no init script
if ! zgen saved; then
    echo "Creating a zgen save"

    # plugins
    zgen load zsh-users/zsh-syntax-highlighting
    zgen load zsh-users/zsh-history-substring-search
    zgen load mollifier/cd-gitroot
    zgen load Tarrasch/zsh-autoenv
    zgen load tarruda/zsh-autosuggestions

    # completions
    zgen load zsh-users/zsh-completions src

    # theme
    zgen load sindresorhus/pure

    # save all to init script
    zgen save
fi

# Autoload modules
# autoload -U compinit && compinit

# History
SAVEHIST=10000
HISTSIZE=10000
HISTFILE=$HOME/.zsh_history

setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_SAVE_NO_DUPS
setopt HIST_VERIFY
setopt HIST_BEEP

# Disable Globbing
alias git='noglob git'
alias cordova='noglob cordova'
alias open='noglob open'
alias npm='noglob npm'

# Aliases
alias c='clear'
alias e='ranger'
alias m='cmus'
alias d='dict'
alias yt='$HOME/.dotfiles/vendor/mps-yt/mpsyt'
alias tl='t stream timeline'
alias mplayer='mpv'
alias twitter='rainbowstream -iot'
alias t='twitter'
alias tcat='tput smkx; cat; tput rmkx'
alias cdg='cd-gitroot'
alias top='htop'
alias pdf='zathura'
alias pbc='pbcopy'
alias pbp='pbpaste'
alias ztime='/usr/bin/time zsh -i -c exit'
alias ex='txt2regex'
alias use='ncdu'
alias p='feh --auto-zoom --scale-down --keep-zoom-vp'
alias tb='feh --auto-zoom --scale-down --keep-zoom-vp --thumbnails'
alias v='mplayer'
alias ls='ls -G'
alias ag='ag --pager "less -R" --color-line-number 1\;35 --color-path 1\;37 --color-match 7\;34'
alias http='http --style vim'
alias n='cd $HOME/Dropbox/Notes && vim .'
alias fonts='fc-list | cut -f2 -d: | sort -u'
alias g='git'
alias gfl='git-flow'
alias gl='g l'
alias gs='g status --short --branch'
alias gb='g branch'
alias gbc='g checkout -b'
alias gc='g commit --verbose'
alias gca='g commit --verbose --amend'
alias gcm='g commit --message'
alias gg='g ack'
alias ga='g add'
alias gp='g push'
alias gpf='g push --force'
alias gd='g diff --no-ext-diff'
alias gdt='g difftool'
alias gm='g merge'
alias gmt='g mergetool'
alias gf='g fetch'
alias gfm='g pull'
alias gr='g reset'
alias grl='g reflog'
alias gco='g checkout'
alias ll='ls -l'
alias la='ls -la'

# Temporary files
if [[ ! -d "$TMPDIR" ]]; then
  mkdir -p -m 700 "$TMPDIR"
fi
TMPPREFIX="${TMPDIR%/}/zsh"
if [[ ! -d "$TMPPREFIX" ]]; then
  mkdir -p "$TMPPREFIX"
fi

# Chat
function chat {
  tmux start-server
  tmux new-session -d -s Chat -n feeds
  tmux send-keys -t 0 'clear; weechat' C-m
  tmux split-window -t 0 -h -p 30
  tmux split-window -t 1 -v
  tmux resize-pane -t 1 -y 11
  tmux send-keys -t 1 'clear; watch -t -n 3600 "t whoami --csv > /tmp/me; transpose /tmp/me /tmp/me_; column -s, -t /tmp/me_ | sed '\''1d;11d;12d;13d;14d;15d;'\'' | sed -e '\''s/^/   /'\'' | less -E"' C-m
  tmux send-keys -t 2 'clear; tl' C-m
  tmux select-pane -t 0
  tmux attach-session -d -tChat
}

# Marks
function jump {
  cd -P "$MARKPATH/$1" 2>/dev/null || echo "No such mark: $1"
}
function mark {
  mkdir -p "$MARKPATH"; ln -s "$(pwd)" "$MARKPATH/$1"
}
function unmark {
  rm -i "$MARKPATH/$1"
}
function marks {
  \ls -l "$MARKPATH" | tail -n +2 | sed 's/  / /g' | cut -d' ' -f9- | awk -F ' -> ' '{printf "%-10s -> %s\n", $1, $2}'
}
function _completemarks {
  reply=($(ls $MARKPATH))
}
function selectmark {
  URI="$(marks | cat | selecta | awk '{print $1}')"
  cd -P "$MARKPATH/$URI" 2>/dev/null || echo "No such mark: $URI"
}
compctl -K _completemarks jump
compctl -K _completemarks unmark

# urxvt modal cursor
ZSHELL=`which zsh`
zle-keymap-select () {
  # urxvt
  if [ -n "$WINDOWID" ]
  then
    if [ $KEYMAP = vicmd ]; then
      echo -ne "\033]12;#B294BB\007"
    else
      echo -ne "\033]12;#969896\007"
    fi
  fi
}
zle -N zle-keymap-select

zle-line-init () {
  zle -K viins
  # urxvt
  if [ -n "$WINDOWID" ]; then
    echo -ne "\033]12;#969896\007"
  fi
}
zle -N zle-line-init

# Setup zsh-autosuggestions
AUTOSUGGEST="${HOME}/.zgen/tarruda/zsh-autosuggestions-master/autosuggestions.zsh"
source $AUTOSUGGEST

# Enable autosuggestions automatically
zle-line-init() {
    zle autosuggest-start
}

zle -N zle-line-init

# Base16
BASE16_SCHEME="tomorrow"
if [ -f $HOME/.dotfiles/vendor/base16-shell/base16-$BASE16_SCHEME.dark.sh ]; then
  BASE16_SHELL="$HOME/.dotfiles/vendor/base16-shell/base16-$BASE16_SCHEME.dark.sh"
  [[ -s $BASE16_SHELL ]] && . $BASE16_SHELL
fi

man() {
  env LESS_TERMCAP_mb=$'\E[01;31m' \
  LESS_TERMCAP_md=$'\E[01;35;74m' \
  LESS_TERMCAP_me=$'\E[0m' \
  LESS_TERMCAP_se=$'\E[0m' \
  LESS_TERMCAP_so=$'\E[38;246m' \
  LESS_TERMCAP_ue=$'\E[0m' \
  LESS_TERMCAP_us=$'\E[04;38;146m' \
  man "$@"
}

# RVM
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

bindkey -v

# History substring search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# HOME/END bindings
if [ -z "$WINDOWID" ]
then
  if [ -z "$TMUX" ]
  then
    # iTerm2
    bindkey "^[[H" beginning-of-line  
    bindkey "^[[F" end-of-line       
    bindkey -M vicmd '^[[H' beginning-of-line  
    bindkey -M vicmd '^[[F' end-of-line       
  else
    # iTerm2 + tmux
    bindkey "^[[1~" beginning-of-line  
    bindkey "^[[4~" end-of-line       
    bindkey -M vicmd '^[[1~' beginning-of-line  
    bindkey -M vicmd '^[[4~' end-of-line       
  fi
else
  # urxvt
  bindkey '^[[7~' beginning-of-line
  bindkey '^[[8~' end-of-line
  bindkey -M vicmd '^[[7~' beginning-of-line
  bindkey -M vicmd '^[[8~' end-of-line
fi

# Delete key
bindkey '^[[3~' delete-char

# Vi bindings
# mine
bindkey -M vicmd 'H' beginning-of-line
bindkey -M vicmd 'L' end-of-line

# Delete
bindkey -M vicmd '^[[3~' delete-char

# Undo/Redo
bindkey -M vicmd 'u' undo
bindkey -M vicmd '^R' redo

# backspace and ^h working even after
# returning from command mode
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char

# Autosuggest
bindkey '^T' autosuggest-toggle
bindkey '^n' vi-forward-word

# Pickler helpers for Pivotal
function picklerPicker {
  clear
  ID=$(pickler search | sed '/:D/d' | selecta | awk '{print $1}')
  clear
  pickler $1 $ID
  echo -e '\n'
  read "?Press Enter to return to list"
  picklerPicker $1
}

alias j="selectmark"
alias pt="picklerPicker show"
