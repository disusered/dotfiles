# settings
  # enable mouse support
  set -g mode-mouse on
  set -g mouse-resize-pane on
  set -g mouse-select-pane on

  # enable arrow keys
  set-window-option -g xterm-keys on

  # start window index of 1
  set -g base-index 1

  # pbcopy fix
  set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# screen bindings
  # screen C-C c
  unbind C-C
  bind C-C new-window
  bind c new-window

  # detach C-D d
  unbind C-D
  bind C-D detach

  # title A
  unbind A
  bind A command-prompt "rename-window %%"

  # other C-A
  unbind C-b
  bind C-b last-window

  # kill K
  unbind q
  bind q confirm-before "kill-window"

  # smart pane switching with awareness of vim splits
  bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
  bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
  bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
  bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
  bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

  # vim splits
  unbind s
  bind s split-window -v
  unbind v
  bind v split-window -h

# visual
  # status bar
  set-option -g status off

  # colors
  set -g default-terminal "screen-256color"

  # color scheme
  source-file ~/.dotfiles/tmux/tmuxline.conf
