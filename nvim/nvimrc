" Plug =========================================================================
  set nocompatible
  filetype off

  call plug#begin('~/.dotfiles/vendor/nplugged')

  " Visual
  Plug 'chriskempson/base16-vim'
  Plug 'itchyny/lightline.vim'

  " Source Control
  Plug 'tpope/vim-fugitive'
  Plug 'airblade/vim-gitgutter'

  " Editor
  Plug 'benekastah/neomake'
  Plug 'Valloric/YouCompleteMe', { 'do': './install.sh' }

  " Javascript
  au BufNewFile,BufRead {*.es6} set ft=javascript
  Plug 'heavenshell/vim-jsdoc',   { 'for': 'javascript' }
  Plug 'marijnh/tern_for_vim',    { 'for': 'javascript', 'do': 'npm install' }
  Plug 'pangloss/vim-javascript', { 'for': 'javascript' }

  " JSX
  au BufNewFile,BufRead {*.jsx} set ft=jsx
  Plug 'mxw/vim-jsx',             { 'for': 'jsx' }

  " JSON
  au BufNewFile,BufRead {*.json,*jshintrc,*tern-project,*jscsrc} set ft=json

" Conditional ===================================================================
  au BufRead,BufNewFile {*.md,*.markdown} set filetype=markdown
  au BufNewFile,BufRead {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru,compass.config} set ft=ruby
  au BufNewFile,BufRead {*gitconfig} set ft=gitconfig
  au BufNewFile,BufRead {*.hbs,*.handlebars} set ft=mustache
  au BufNewFile,BufRead {*Dockerfile} set filetype=dockerfile
  au BufNewFile,BufRead {*.coffee,*.litcoffee} set filetype=coffee
  au BufNewFile,BufRead {*.jade} set filetype=jade
  au BufNewFile,BufRead {*zshrc,*zshenv} set filetype=zsh.sh
  au BufNewFile,BufRead {.env} set filetype=sh

  call plug#end()
  filetype plugin indent on

" Autocommands
  au FileType make set noexpandtab
  au FileType gitconfig set noexpandtab
  au FileType css setlocal omnifunc=csscomplete#CompleteCSS
  au FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
  au FileType python setlocal omnifunc=pythoncomplete#Complete
  au FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
  au FileType gitcommit setlocal omnifunc=pickler#omnifunc
  au FileType javascript setlocal omnifunc=tern#Complete

  autocmd! BufWritePost *.py,*.js Neomake

" Settings =====================================================================
  let mapleader = ","

  set encoding=utf-8
  set laststatus=2
  set mouse=a
  set ttymouse=xterm2
  set ffs=unix,dos,mac
  set clipboard=unnamed
  set autoread
  set hidden
  set ruler
  set number
  set title
  set backspace=indent,eol,start
  set nostartofline
  set colorcolumn=80
  set nofoldenable
  set tabstop=2
  set shiftwidth=2
  set softtabstop=2
  set expandtab
  set autoindent
  set copyindent
  set pastetoggle=<F2>
  set list
  set listchars=trail:·,tab:⇥ᐧ
  "set listchars=trail:␣,tab:⇥ᐧ,nbsp:⍽,eol:¶,extends:▸,precedes:◂
  set wrap
  set linebreak
  set nolist
  set breakindent
  set showbreak=\ \...
  set wmh=0
  set background=dark
  set lazyredraw
  set hlsearch
  set incsearch
  set ignorecase
  set smartcase
  set gdefault
  set wildignore+=.git\*,.hg\*,.svn\*
  set nobackup
  set nowb
  set noswapfile
  set spellfile=$HOME/.dotfiles/vim/spellfile.utf-8.add

  filetype plugin on
  filetype indent on
  syntax enable
  let base16colorspace=256
  colorscheme base16-tomorrow

" plugin settings ==============================================================
  let $MYCONFIG="$HOME/.dotfiles/nvim/config"

  source $MYCONFIG/neomake.vim
  source $MYCONFIG/lightline.vim

  " YouCompleteMe
  let g:ycm_autoclose_preview_window_after_completion = 1
  let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'
  let g:ycm_enable_diagnostic_signs = 0
  let g:ycm_key_list_select_completion = ['<c-n>', '<down>']
  let g:ycm_key_list_previous_completion  = ['<C-p>', '<Up>']

  " Tern
  let g:tern_show_argument_hints = 'no'
  let g:tern_show_signature_in_pum  = 1
