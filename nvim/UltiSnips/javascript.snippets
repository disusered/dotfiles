snippet jdh "Javadoc header"
/**
 * `!p snip.rv = fn`
 *
 * @author ${1:Carlos Antonio}
 * @overview ${2:My cool project}
 * @copyright Â© `date +"%Y"` ${3:Carlos Antonio}
 * @license ${4:GPLv2}
 */
endsnippet

snippet if "A simple if condition"
if (${1:expression}) {
	$0
}
endsnippet

snippet ife "A simple if else condition"
if (${1:expression}) {
	$4
} else ${2:if (${3:bar}) }{
	$0
}
endsnippet

snippet sw "Switch condition"
switch (${1:expression}) {
	case ${2:alpha}:
		${5:console.log($2);}
		break;
	case ${3:beta}:
		${6:console.log($3);}
		break;${4:
	default:
		${7:console.log('default');}}
}
endsnippet

snippet => "Fat arrow" i
(${1}) => {
	$0
}
endsnippet


snippet fd "Function declaration"
function ${1:name}(${2}){
	$0
}
endsnippet

snippet _f "Function declaration" i
function(${2}){
	$0
}
endsnippet

snippet fe "Function expression"
var ${1:name} = function ${1:name}(${2}){
	$0
}
endsnippet

snippet cl "Log to default console"
console.log(${0});
endsnippet

snippet cd "Log to debug console"
console.debug(${0});
endsnippet

snippet cw "Log to warning  console"
console.warn(${0});
endsnippet

snippet ce "Log to error console"
console.error(${0});
endsnippet

snippet us "Use strict definition"
'use strict';
endsnippet

snippet flow "Flow type checking"
/* @flow */
endsnippet

snippet rpta "React.PropTypes.Array" i
React.PropTypes.array
endsnippet

snippet rptb "React.PropTypes.Boolean" i
React.PropTypes.bool
endsnippet

snippet rptf "React.PropTypes.Function" i
React.PropTypes.func
endsnippet

snippet rptn "React.PropTypes.number" i
React.PropTypes.number
endsnippet

snippet rpto "React.PropTypes.object" i
React.PropTypes.object
endsnippet

snippet rpts "React.PropTypes.string" i
React.PropTypes.string
endsnippet

snippet rpte "React.PropTypes.element" i
React.PropTypes.element
endsnippet

snippet rpton "React.PropTypes.oneOf"
React.PropTypes.oneOf([$0])
endsnippet

snippet rptao "React.PropTypes.arrayOf"
React.PropTypes.arrayOf($0)
endsnippet

snippet rptoo "React.PropTypes.objectOf"
React.PropTypes.objectOf($0)
endsnippet

snippet rptsh "React.PropTypes.shape" i
React.PropTypes.shape({
	${1:key}: $0
})
endsnippet

snippet ir ".isRequired" i
.isRequired
endsnippet

snippet regex "New RegEx"
var ${1:re} = new RegExp($0, '${2:i}');
endsnippet

snippet re "Return"
return ${1:variable};
endsnippet

snippet ro "Return object"
return {
	${1:key}: ${2:value}
};
endsnippet

snippet @ "this" i
this
endsnippet

snippet r "require()"
require('$0');
endsnippet

snippet v "var"
var ${1:name} = $0
endsnippet

snippet it "it should..."
it('${1:should...}', function() {
	$0
});
endsnippet

snippet d "debugger;"
debugger;
endsnippet
