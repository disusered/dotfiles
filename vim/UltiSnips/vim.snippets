snippet flow "Flow and ESLint"
function! s:lint()
  Neomake
  FlowMake
endfunction

map <silent> <Leader>m :Dispatch npm start<CR>

let g:flow#enable = 1
nnoremap <Leader>l :Neomake<CR>:FlowMake<CR>

let g:flow#omnifunc = 1
au FileType {javascript,javascript.jsx} setl omnifunc=flowcomplete#Complete

if has('nvim')
  autocmd BufWritePost *.jsx,*.js,*.json call s:lint()
  let g:neomake_json_enabled_makers = ['jsonlint']
  let g:neomake_javascript_enabled_makers = ['eslint']
else
  let g:syntastic_javascript_checkers = ['eslint']
endif
endsnippet

snippet eslint "ESLint"
if has('nvim')
  let g:neomake_json_enabled_makers = ['jsonlint']
  let g:neomake_javascript_enabled_makers = ['eslint']
else
  let g:syntastic_javascript_checkers = ['eslint']
endif
endsnippet

snippet mocha "Mocha Options"
let test#javascript#mocha#options = '${0:--compilers js:babel/register}'
endsnippet

snippet npm "Basic npm commands"
map <silent> <Leader>mh :Start! npm start<CR>
map <silent> <Leader>mt :Start! npm test<CR>
endsnippet

snippet chrome "Chrome, no CORS, remote debugging"
map <silent> <Leader>mc :Start! noglob open -a Google\ Chrome --args --remote-debugging-port=9222 --allow-file-access-from-files --disable-web-security http://localhost:8000/webpack-dev-server/<CR>
$0
endsnippet

snippet canary "Chrome, no CORS, remote debugging"
map <silent> <Leader>mc :Start! noglob open -a Google\ Chrome\ Canary --args --remote-debugging-port=9222 --allow-file-access-from-files --disable-web-security http://localhost:8000/webpack-dev-server/<CR>
$0
endsnippet
